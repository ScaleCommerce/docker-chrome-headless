#!/usr/bin/env node

const args = process.argv.slice(2);

const url = args.shift() || '';
const filename = args.shift() || '';

if (!url) {
  process.stderr.write('No URL specified\n');

  process.exit(1);
}

const options = {
  debug: false,
	 delay: 500,
	 maxDepth: 3,
	 maxUrls: 10,
	 maxWait: 5000,
	 recursive: true,
	 htmlMaxCols: 2000,
	 htmlMaxRows: 2000,
	 puppeteerClusterOptions: {
	   puppeteerOptions: {
	     executablePath: process.env.CHROME_BIN || null,
	     args: ['--no-sandbox', '--headless'],
	   },
	 }
};

const Wappalyzer = require('wappalyzer/driver.js');
const Browser = require('./puppeteer.js');
const wappalyzer = new Wappalyzer(Browser, url, options);
const fs = require('fs');

wappalyzer.analyze()
  .then(json => {
    if (!filename) {
      process.stdout.write(`${JSON.stringify(json, null, 2)}\n`);
    } else {

      fs.writeFileSync("/opt/reports/" + filename, `${JSON.stringify(json, null, 2)}\n`);
    }
    process.exit(0);
  })
  .catch(error => {
    process.stderr.write(`${error}\n`);
 
    process.exit(1);
});
